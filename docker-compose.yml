version: '3.8'

services:
  # MySQL Veritabanı
  mysql:
    image: mysql:8.0
    container_name: polatlegal_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 61611616
      MYSQL_DATABASE: polats
      MYSQL_USER: polat_user
      MYSQL_PASSWORD: 61611616
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - polatlegal_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p61611616"]
      timeout: 20s
      retries: 10

  # Go Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    container_name: polatlegal_backend
    restart: unless-stopped
    environment:
      - DB_HOST=mysql
      - DB_NAME=polats
      - DB_USER=root
      - DB_PASSWORD=61611616
      - JWT_SECRET=PolAtLegal2024!JWT$Secret#Talha@Bektas*VerySecure%Key9876
      - DOCKER_ENV=true
    ports:
      - "8061:8061"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - polatlegal_network
    volumes:
      - uploaded_files:/var/www/html/assets

  # Nginx Frontend ve Reverse Proxy
  frontend:
    build:
      context: .
      dockerfile: Dockerfile  
      target: frontend
    container_name: polatlegal_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - polatlegal_network
    volumes:
      - uploaded_files:/var/www/html/assets
      - ./ssl:/etc/nginx/ssl
    command: >
      sh -c "
        # SSL sertifikası yoksa HTTP olarak başlat
        if [ ! -f /etc/nginx/ssl/cert.pem ]; then
          echo 'SSL sertifikası bulunamadı, HTTP modunda başlatılıyor...'
        fi
        nginx -g 'daemon off;'
      "

networks:
  polatlegal_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  uploaded_files:
    driver: local